package com.example.mingle;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;

import android.content.ContentValues;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;


public class DatabaseHelper extends SQLiteOpenHelper {
	
	  public static final String TABLE_UIDLIST = "uidlist";
	  public static final String COLUMN_UID = "_uid";
	  public static final String TABLE_MYUID = "myuid";
	  public static final String COLUMN_MYUID = "my_uid";
	  public static final String COLUMN_TIMESTAMP = "ts";
	  public static final String COLUMN_SENDUID = "send_uid";
	  public static final String COLUMN_MSG = "msg";

	  private static final String DATABASE_NAME = "minglelocal.db";
	  private static final int DATABASE_VERSION = 1;
	  public HashMap uid_list;
	  
	  // Database creation sql statement
	  private static final String DATABASE_CREATE = "create table "
	      + TABLE_UIDLIST + "(" + COLUMN_UID
	      + " text not null);";
	  private static final String MYUID_CREATE = "create table "
	      + TABLE_MYUID + "(" + COLUMN_MYUID
	      + " text not null);";

	  public DatabaseHelper(Context context) {
	    super(context, DATABASE_NAME, null, DATABASE_VERSION);
	  }

	  @Override
	  public void onCreate(SQLiteDatabase database) {
	    database.execSQL(DATABASE_CREATE);
	    database.execSQL(MYUID_CREATE);
	  }

	  @Override
	  public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		  Log.w(DatabaseHelper.class.getName(),
	      "Upgrading database from version " + oldVersion + " to "
	            + newVersion + ", which will destroy all old data");
		  db.execSQL("DROP TABLE IF EXISTS " + TABLE_UIDLIST);
		  db.execSQL("DROP TABLE IF EXISTS " + TABLE_MYUID);
		  onCreate(db);
	  }
	  
	  public boolean insertMessages(SQLiteDatabase db, String uid, String msg, String msg_ts) {
		  return true;
	  }
	  
	  public boolean insertNewUID(SQLiteDatabase db, String uid){
		  ContentValues values = new ContentValues();
		  values.put(DatabaseHelper.COLUMN_UID,uid);
		  db.insert(DatabaseHelper.TABLE_UIDLIST,null,values);
		  
		  String createUIDTableQuery = "create table " + uid 
				  + "(" + COLUMN_SENDUID + " text not null, " + COLUMN_MSG + " text not null, " 
				  + COLUMN_TIMESTAMP + " text not null);";
		  db.execSQL(createUIDTableQuery);
		  return true;
	  }
	  
	  public boolean setMyUID(SQLiteDatabase db,String uid){
		  
		  return true;
	  }

}
