package socketTest;

import io.socket.IOAcknowledge;

import io.socket.IOCallback;
import io.socket.SocketIO;
import io.socket.SocketIOException;

import org.json.JSONException;
import org.json.JSONObject;
import java.io.*;
import java.net.*;


public class SocketTestMain  {
	
	
	public static void main(String args[]) {
		SocketTestMain.SocketAgent sock1 = new SocketAgent("ec2-54-178-214-176.ap-northeast-1.compute.amazonaws.com", 8080);
		//SocketTestMain.SocketAgent sock1 = new SocketAgent("127.0.0.1", 8000);
		//(new Thread(sock1)).start();
		sock1.send("Message sent to server");
		/* 
		SocketTestMain.SocketAgent sock = new SocketAgent("", 8000);
		
		(new Thread(sock)).start();
		sock.send("fuck you server");
		*/
	}
	
	
	private static class SocketAgent implements Runnable {
		Socket socket = null;
		PrintWriter writer = null;
		BufferedReader reader = null;
		public SocketAgent(String url, Integer port) {
			try {
				socket = new Socket(url, port);
				socket.setReceiveBufferSize(1024);
				socket.setSendBufferSize(1024);
				socket.setKeepAlive(true);
				
				writer = new PrintWriter(socket.getOutputStream(), 
		                 true);
				reader = new BufferedReader(new InputStreamReader(
		                socket.getInputStream()));
			} catch (IOException e) {
		         System.err.println(e.toString());
		    }
			printSocketInfo(socket);
		}
		
		
		private String currentStatus() {
			return "";
		}
		
		public void send(String message) {
				System.out.println(message);
			writer.println(message);	
			
		}
		
		public String onReceive() {
			String m = null;
			String str = "";
	        System.out.println("about to start reading");
	       try {
	    	   System.out.println("+++++++++rd++++");
	        while ((m=reader.readLine())!= null) {
	       	 System.out.println("reading!!!");
	           //out.println(m);
	       	 		str += m;
	       	 		m = reader.readLine();
	       	 	
	           //w.write(m,0,m.length());
	           //w.newLine();
	           //w.flush();
	        }
	       } catch (IOException e) {
	 	         System.err.println(e.toString());
	  	    }
	       //s= s.replaceAll("\n", "\\n");
	       /*JSONObject json = null;
	       try {
	    	   json = new JSONObject(str);  
	       } catch (JSONException j) {
	    	   System.err.println(j.toString());
	       }
	      
	       return json;*/
	       return str; 
		}
		
		public void cleanup() {
			try {
			writer.close();
	        reader.close();
	        socket.close();
			} catch (IOException e) {
				 System.err.println(e.toString());
			}
		}
		
		
		
		 private void printSocketInfo(Socket s) {
		      System.out.println("Remote address = "
		         +s.getInetAddress().toString());
		      System.out.println("Remote port = "
		         +s.getPort());
		      System.out.println("Local socket address = "
		         +s.getLocalSocketAddress().toString());
		      System.out.println("Local address = "
		         +s.getLocalAddress().toString());
		      System.out.println("Local port = "
		         +s.getLocalPort());
		   }
		public void run() {
			// TODO Auto-generated method stub
			System.out.println(this.onReceive());
		}
		
	}
	
	
}
